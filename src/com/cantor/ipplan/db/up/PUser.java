package com.cantor.ipplan.db.up;

// Generated 13.04.2013 9:53:14 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import org.hibernate.Hibernate;
import org.hibernate.annotations.DynamicUpdate;

import com.cantor.ipplan.core.DataBridge;
import com.cantor.ipplan.shared.PUserWrapper;

/**
 * Puser generated by hbm2java
 */
@Entity
@Table(name = "PUSER", uniqueConstraints = @UniqueConstraint(columnNames = "PUSER_EMAIL"))
@DynamicUpdate
public class PUser implements java.io.Serializable, DataBridge<PUserWrapper> {

	private int puserId;
	private PUser owner;
	private String puserEmail;
	private String puserLogin;
	private String puserPswd;
	private String puserDbname;
	private int puserBoss;
	private Date puserCreated;
	private Date puserLastaccess;
	private String puserLastaccessDevice;
	private int puserLock;
	private String puserLockReason;
	private int puserTarif;
	private int puserFlags;
	private Set<Sync> syncs = new HashSet<Sync>(0);
	private Set<Payments> paymentses = new HashSet<Payments>(0);
	private Set<PUser> children = new HashSet<PUser>(0);

	public PUser() {
	}

	public PUser(int puserId, String puserEmail, String puserLogin,
			String puserPswd, String puserDbname, int puserBoss,
			Date puserCreated, Date puserLastaccess, int puserLock,
			int puserTarif) {
		this.puserId = puserId;
		this.puserEmail = puserEmail;
		this.puserLogin = puserLogin;
		this.puserPswd = puserPswd;
		this.puserDbname = puserDbname;
		this.puserBoss = puserBoss;
		this.puserCreated = puserCreated;
		this.puserLastaccess = puserLastaccess;
		this.puserLock = puserLock;
		this.puserTarif = puserTarif;
	}

	public PUser(int puserId, PUser puser, String puserEmail,
			String puserLogin, String puserPswd, String puserDbname,
			int puserBoss, Date puserCreated, Date puserLastaccess,
			String puserLastaccessDevice, int puserLock,
			String puserLockReason, int puserTarif, Set<Sync> syncs,
			Set<Payments> paymentses, Set<PUser> pusers) {
		this.puserId = puserId;
		this.owner = puser;
		this.puserEmail = puserEmail;
		this.puserLogin = puserLogin;
		this.puserPswd = puserPswd;
		this.puserDbname = puserDbname;
		this.puserBoss = puserBoss;
		this.puserCreated = puserCreated;
		this.puserLastaccess = puserLastaccess;
		this.puserLastaccessDevice = puserLastaccessDevice;
		this.puserLock = puserLock;
		this.puserLockReason = puserLockReason;
		this.puserTarif = puserTarif;
		this.syncs = syncs;
		this.paymentses = paymentses;
		this.children = pusers;
	}

	@Id
	@javax.persistence.SequenceGenerator(name="newRec", sequenceName="NEWRECORDID")	
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "newRec")
	@Column(name = "PUSER_ID", unique = true, nullable = false)
	public int getPuserId() {
		return this.puserId;
	}

	public void setPuserId(int puserId) {
		this.puserId = puserId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "OWNER_PUSER_ID")
	public PUser getOwner() {
		return this.owner;
	}

	public void setOwner(PUser puser) {
		this.owner = puser;
	}

	@Column(name = "PUSER_EMAIL", unique = true, nullable = false, length = 320)
	public String getPuserEmail() {
		return this.puserEmail;
	}

	public void setPuserEmail(String puserEmail) {
		this.puserEmail = puserEmail;
	}

	@Column(name = "PUSER_LOGIN", nullable = false, length = 60)
	public String getPuserLogin() {
		return this.puserLogin;
	}

	public void setPuserLogin(String puserLogin) {
		this.puserLogin = puserLogin;
	}

	@Column(name = "PUSER_PSWD", nullable = false, length = 512)
	public String getPuserPswd() {
		return this.puserPswd;
	}

	public void setPuserPswd(String puserPswd) {
		this.puserPswd = puserPswd;
	}

	@Column(name = "PUSER_DBNAME", nullable = false, length = 256)
	public String getPuserDbname() {
		return this.puserDbname;
	}

	public void setPuserDbname(String puserDbname) {
		this.puserDbname = puserDbname;
	}

	@Column(name = "PUSER_BOSS", nullable = false)
	public int getPuserBoss() {
		return this.puserBoss;
	}

	public void setPuserBoss(int puserBoss) {
		this.puserBoss = puserBoss;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PUSER_CREATED", nullable = false, length = 10)
	public Date getPuserCreated() {
		return this.puserCreated;
	}

	public void setPuserCreated(Date puserCreated) {
		this.puserCreated = puserCreated;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PUSER_LASTACCESS", nullable = false, length = 10)
	public Date getPuserLastaccess() {
		return this.puserLastaccess;
	}

	public void setPuserLastaccess(Date puserLastaccess) {
		this.puserLastaccess = puserLastaccess;
	}

	@Column(name = "PUSER_LASTACCESS_DEVICE", length = 20)
	public String getPuserLastaccessDevice() {
		return this.puserLastaccessDevice;
	}

	public void setPuserLastaccessDevice(String puserLastaccessDevice) {
		this.puserLastaccessDevice = puserLastaccessDevice;
	}

	@Column(name = "PUSER_LOCK", nullable = false)
	public int getPuserLock() {
		return this.puserLock;
	}

	public void setPuserLock(int puserLock) {
		this.puserLock = puserLock;
	}

	@Column(name = "PUSER_LOCK_REASON", length = 256)
	public String getPuserLockReason() {
		return this.puserLockReason;
	}

	public void setPuserLockReason(String puserLockReason) {
		this.puserLockReason = puserLockReason;
	}

	@Column(name = "PUSER_TARIF", nullable = false)
	public int getPuserTarif() {
		return this.puserTarif;
	}

	public void setPuserTarif(int puserTarif) {
		this.puserTarif = puserTarif;
	}

	@Column(name = "PUSER_FLAGS", nullable = true)
	public int getPuserFlags() {
		return this.puserFlags;
	}

	public void setPuserFlags(int puserFlags) {
		this.puserFlags = puserFlags;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "puser")
	public Set<Sync> getSyncs() {
		return this.syncs;
	}

	public void setSyncs(Set<Sync> syncs) {
		this.syncs = syncs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "puser")
	public Set<Payments> getPaymentses() {
		return this.paymentses;
	}

	public void setPaymentses(Set<Payments> paymentses) {
		this.paymentses = paymentses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "owner")
	public Set<PUser> getChildren() {
		return this.children;
	}

	public void setChildren(Set<PUser> pusers) {
		this.children = pusers;
	}


	@Override
	public PUserWrapper toClient() {
		PUserWrapper u = new PUserWrapper();
		u.puserId = puserId;
		u.owner = owner!=null?owner.toClient():null;
		u.puserLogin = puserLogin;
		u.puserEmail = puserEmail;
		u.puserBoss = puserBoss;
		u.puserCreated = puserCreated;
		u.puserLastaccess = puserLastaccess;
		u.puserLastaccessDevice = puserLastaccessDevice;
		u.puserLock = puserLock;
		u.puserLockReason = puserLockReason;
		u.puserTarif = puserTarif;
		u.puserFlags = puserFlags;
		u.puserDbname = puserDbname;
		for (Sync item : syncs) {
			u.syncs.add(item.toClient());
		}
		for (Payments item : paymentses) {
			u.paymentses.add(item.toClient());
		}
		for (PUser item : children) {
			// для того, чтобы не было рекурсии
			item.owner = null;
			PUserWrapper uchild = item.toClient();
			item.owner = this;
			uchild.owner = u;
			u.children.add(uchild);
		}
		return u;
	}

	@Override
	public void fromClient(PUserWrapper data) {
	}

	@Override
	public void fetch(boolean deep) {
		Hibernate.initialize(this.getOwner());
		Hibernate.initialize(this.getPaymentses());
		Hibernate.initialize(this.getChildren());
		Hibernate.initialize(this.getSyncs());
		if(deep) {
			//TODO
		}
	}

	@Transient
	public String getFullName() {
		return puserLogin==null?puserEmail:puserLogin+"("+puserEmail+")";
	}
}
