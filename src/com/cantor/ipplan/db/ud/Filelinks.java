package com.cantor.ipplan.db.ud;

// Generated 08.07.2013 10:15:45 by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.Hibernate;

import com.cantor.ipplan.core.DataBridge;
import com.cantor.ipplan.shared.FileLinksWrapper;

/**
 * Filelinks generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "FILELINKS")
public class Filelinks implements java.io.Serializable, DataBridge<FileLinksWrapper> {

	private int filelinksId;
	private Provider provider;
	private Bargain bargain;
	private String filelinksName;
	private String filelinksUri;

	public Filelinks() {
	}

	public Filelinks(int filelinksId, Provider provider, Bargain bargain,
			String filelinksName, String filelinksUri) {
		this.filelinksId = filelinksId;
		this.provider = provider;
		this.bargain = bargain;
		this.filelinksName = filelinksName;
		this.filelinksUri = filelinksUri;
	}

	@Id
	@javax.persistence.SequenceGenerator(name="newRec", sequenceName="NEWRECORDID")	
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "newRec")
	@Column(name = "FILELINKS_ID", unique = true, nullable = false)
	public int getFilelinksId() {
		return this.filelinksId;
	}

	public void setFilelinksId(int filelinksId) {
		this.filelinksId = filelinksId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PROVIDER_ID", nullable = false)
	public Provider getProvider() {
		return this.provider;
	}

	public void setProvider(Provider provider) {
		this.provider = provider;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BARGAIN_ID", nullable = false)
	public Bargain getBargain() {
		return this.bargain;
	}

	public void setBargain(Bargain bargain) {
		this.bargain = bargain;
	}

	@Column(name = "FILELINKS_NAME", nullable = false, length = 120)
	public String getFilelinksName() {
		return this.filelinksName;
	}

	public void setFilelinksName(String filelinksName) {
		this.filelinksName = filelinksName;
	}

	@Column(name = "FILELINKS_URI", nullable = false, length = 320)
	public String getFilelinksUri() {
		return this.filelinksUri;
	}

	public void setFilelinksUri(String filelinksUri) {
		this.filelinksUri = filelinksUri;
	}

	@Override
	public FileLinksWrapper toClient() {
    	FileLinksWrapper wrap = new FileLinksWrapper();
    	wrap.filelinksId = filelinksId;
    	wrap.providerId = provider.getProviderId();
    	wrap.filelinksName = filelinksName;
    	wrap.filelinksUri = filelinksUri;
		return wrap;
	}

	@Override
	public void fromClient(FileLinksWrapper data) {
    	filelinksId = data.filelinksId;
    	if(provider==null) provider = new Provider();
    	provider.setProviderId(data.providerId);
    	filelinksName = data.filelinksName;
    	filelinksUri = data.filelinksUri;
	}

	@Override
	public void fetch(boolean deep) {
		Hibernate.initialize(getProvider());
		Hibernate.initialize(getBargain());
	}


}
