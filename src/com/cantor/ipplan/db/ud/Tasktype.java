package com.cantor.ipplan.db.ud;

// Generated 24.06.2013 9:21:29 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.Hibernate;

import com.cantor.ipplan.core.DataBridge;
import com.cantor.ipplan.shared.TasktypeWrapper;

/**
 * Tasktype generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "TASKTYPE")
public class Tasktype implements java.io.Serializable,DataBridge<TasktypeWrapper> {

	private int tasktypeId;
	private String tasktypeName;
	private Set<Task> tasks = new HashSet<Task>(0);

	public Tasktype() {
	}

	public Tasktype(int tasktypeId) {
		this.tasktypeId = tasktypeId;
	}

	public Tasktype(int tasktypeId, String tasktypeName, Set<Task> tasks) {
		this.tasktypeId = tasktypeId;
		this.tasktypeName = tasktypeName;
		this.tasks = tasks;
	}

	@Id
	@javax.persistence.SequenceGenerator(name="newRec", sequenceName="NEWRECORDID")	
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "newRec")
	@Column(name = "TASKTYPE_ID", unique = true, nullable = false)
	public int getTasktypeId() {
		return this.tasktypeId;
	}

	public void setTasktypeId(int tasktypeId) {
		this.tasktypeId = tasktypeId;
	}

	@Column(name = "TASKTYPE_NAME", length = 40)
	public String getTasktypeName() {
		return this.tasktypeName;
	}

	public void setTasktypeName(String tasktypeName) {
		this.tasktypeName = tasktypeName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tasktype")
	public Set<Task> getTasks() {
		return this.tasks;
	}

	public void setTasks(Set<Task> tasks) {
		this.tasks = tasks;
	}

	@Override
	public TasktypeWrapper toClient() {
		TasktypeWrapper wrap = new TasktypeWrapper();
		wrap.tasktypeId = tasktypeId;
		wrap.tasktypeName = tasktypeName;
		return wrap;
	}

	@Override
	public void fromClient(TasktypeWrapper data) {
		tasktypeId = data.tasktypeId;
		tasktypeName = data.tasktypeName;
	}

	@Override
	public void fetch(boolean deep) {
		Hibernate.initialize(tasks);
	}

}
