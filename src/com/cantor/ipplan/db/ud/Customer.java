package com.cantor.ipplan.db.ud;

// Generated 12.04.2013 19:58:46 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.cantor.ipplan.core.DataBridge;
import com.cantor.ipplan.shared.CustomerWrapper;

/**
 * Customer generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "CUSTOMER")
public class Customer implements java.io.Serializable, DataBridge<CustomerWrapper> {

	private int customerId;
	private String customerName;
	private String customerLookupKey;
	private String customerPrimaryEmail;
	private String customerEmails;
	private String customerPrimaryPhone;
	private String customerPhones;
	private String customerCompany;
	private String customerPosition;
	private Date customerBirthday;
	private Date customerLastupdate;
	private int customerVisible = 1;
	private String customerPhoto;
	private String customerIms;
	
	private Set<Contract> contracts = new HashSet<Contract>(0);
	private Set<Bargain> bargains = new HashSet<Bargain>(0);

	public Customer() {
	}

	public Customer(int customerId, String customerName) {
		this.customerId = customerId;
		this.customerName = customerName;
	}

	public Customer(int customerId, String customerName,
			String customerLookupKey, Set<Contract> contracts,
			Set<Bargain> bargains) {
		this.customerId = customerId;
		this.customerName = customerName;
		this.customerLookupKey = customerLookupKey;
		this.contracts = contracts;
		this.bargains = bargains;
	}

	@Id
	@javax.persistence.SequenceGenerator(name="newRec", sequenceName="NEWRECORDID")	
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "newRec")
	@Column(name = "CUSTOMER_ID", unique = true, nullable = false)
	public int getCustomerId() {
		return this.customerId;
	}

	public void setCustomerId(int customerId) {
		this.customerId = customerId;
	}

	@Column(name = "CUSTOMER_NAME", nullable = false, length = 256)
	public String getCustomerName() {
		return this.customerName;
	}

	public void setCustomerName(String customerName) {
		this.customerName = customerName;
	}

	@Column(name = "CUSTOMER_LOOKUP_KEY", length = 256)
	public String getCustomerLookupKey() {
		return this.customerLookupKey;
	}

	public void setCustomerLookupKey(String customerLookupKey) {
		this.customerLookupKey = customerLookupKey;
	}

	@Column(name = "CUSTOMER_PRIMARY_EMAIL", length = 256)
	public String getCustomerPrimaryEmail() {
		return this.customerPrimaryEmail;
	}

	public void setCustomerPrimaryEmail(String customerPrimaryEmail) {
		this.customerPrimaryEmail = customerPrimaryEmail;
	}

	@Column(name = "CUSTOMER_EMAILS", length = 256)
	public String getCustomerEmails() {
		return this.customerEmails;
	}

	public void setCustomerEmails(String customerEmails) {
		this.customerEmails = customerEmails;
	}

	@Column(name = "CUSTOMER_PRIMARY_PHONE", length = 256)
	public String getCustomerPrimaryPhone() {
		return this.customerPrimaryPhone;
	}

	public void setCustomerPrimaryPhone(String customerPrimaryPhone) {
		this.customerPrimaryPhone = customerPrimaryPhone;
	}

	@Column(name = "CUSTOMER_PHONES", length = 256)
	public String getCustomerPhones() {
		return this.customerPhones;
	}

	public void setCustomerPhones(String customerPhones) {
		this.customerPhones = customerPhones;
	}

	@Column(name = "CUSTOMER_COMPANY", length = 120)
	public String getCustomerCompany() {
		return this.customerCompany;
	}

	public void setCustomerCompany(String customerCompany) {
		this.customerCompany = customerCompany;
	}

	@Column(name = "CUSTOMER_POSITION", length = 120)
	public String getCustomerPosition() {
		return this.customerPosition;
	}

	public void setCustomerPosition(String customerPosition) {
		this.customerPosition = customerPosition;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CUSTOMER_BIRTHDAY", length = 19)
	public Date getCustomerBirthday() {
		return this.customerBirthday;
	}

	public void setCustomerBirthday(Date customerBirthday) {
		this.customerBirthday = customerBirthday;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CUSTOMER_LASTUPDATE", length = 19)
	public Date getCustomerLastupdate() {
		return this.customerLastupdate;
	}
	
	public void setCustomerLastupdate(Date customerLastupdate) {
		this.customerLastupdate = customerLastupdate;
	}
	
	@Column(name = "CUSTOMER_VISIBLE", nullable = false)
	public int getCustomerVisible() {
		return this.customerVisible;
	}

	public void setCustomerVisible(int v) {
		this.customerVisible = v;
	}
	
	@Column(name = "CUSTOMER_PHOTO", length = 8190)
	public String getCustomerPhoto() {
		return customerPhoto;
	}

	public void setCustomerPhoto(String customerPhoto) {
		this.customerPhoto = customerPhoto;
	}
	

	@Column(name = "CUSTOMER_IMS", length = 256)
	public String getCustomerIms() {
		return this.customerIms;
	}

	public void setCustomerIms(String customerIms) {
		this.customerIms = customerIms;
	}


	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<Contract> getContracts() {
		return this.contracts;
	}

	public void setContracts(Set<Contract> contracts) {
		this.contracts = contracts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<Bargain> getBargains() {
		return this.bargains;
	}

	public void setBargains(Set<Bargain> bargains) {
		this.bargains = bargains;
	}

	@Override
	public CustomerWrapper toClient() {
		CustomerWrapper wrap = new CustomerWrapper();
		wrap.customerId = customerId;
		wrap.customerName =  customerName;
		wrap.customerLookupKey = customerLookupKey;
		wrap.customerPrimaryEmail = customerPrimaryEmail;
		wrap.customerEmails = customerEmails;
		wrap.customerPrimaryPhone = customerPrimaryPhone;
		wrap.customerPhones = customerPhones;
		wrap.customerCompany = customerCompany;
		wrap.customerPosition = customerPosition;
		wrap.customerBirthday = customerBirthday;
		wrap.customerLastupdate = customerLastupdate;
		wrap.customerVisible = customerVisible;
		
		return wrap;
	}

	@Override
	public void fromClient(CustomerWrapper data) {
		customerId = data.customerId;
		customerLookupKey = data.customerLookupKey;
		customerName = data.customerName;
		customerPrimaryEmail = data.customerPrimaryEmail;
		customerEmails = data.customerEmails;
		customerPrimaryPhone = data.customerPrimaryPhone;
		customerPhones = data.customerPhones;
		customerCompany = data.customerCompany;
		customerPosition = data.customerPosition;
		customerBirthday = data.customerBirthday;
		customerLastupdate = data.customerLastupdate;
		customerVisible = data.customerVisible;
	}

	@Override
	public void fetch(boolean deep) {
		// TODO Auto-generated method stub
		
	}


}
